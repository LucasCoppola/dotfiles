#!/usr/bin/env bash

# Function to create a new tmux session with Neovim and Zsh windows
create_session() {
    local session_path="$1"
    local session_name=$(basename "$session_path" | tr . _)
    
    if tmux has-session -t "$session_name" 2>/dev/null; then
        tmux switch-client -t "$session_name"
    else
        tmux new-session -d -s "$session_name" -c "$session_path" "nvim ."
        
        tmux new-window -t "$session_name" -c "$session_path"
        
        tmux select-window -t "$session_name":1
        
        tmux switch-client -t "$session_name"
    fi
}
selected_dir=$({
    find ~/code -mindepth 1 -maxdepth 1 -type d -not -name "boot.dev"
    
    # find ~/code/boot.dev -mindepth 2 -maxdepth 3 -type d 2>/dev/null | \
    # grep -E "(pokedex|web-server|go-basics|fundamentals|learn-|rss-|memory-)" || true
} | sort | fzf)

if [ -n "$selected_dir" ]; then
  if [ -n "$TMUX" ]; then
    # If we're already in a tmux session, create the new session and switch to it
    create_session "$selected_dir"
  else
    # If we're not in a tmux session, create and attach to the new session
    tmux new-session -d -s "$(basename "$selected_dir" | tr . _)" -c "$selected_dir" "nvim ."
    tmux new-window -t "$(basename "$selected_dir" | tr . _)" -c "$selected_dir"
    tmux select-window -t "$(basename "$selected_dir" | tr . _)":1
    tmux attach-session -t "$(basename "$selected_dir" | tr . _)"
  fi
fi
